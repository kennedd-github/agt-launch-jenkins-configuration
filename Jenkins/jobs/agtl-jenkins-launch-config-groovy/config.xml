<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.32">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.8"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.8">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.7"/>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.67">
    <script>pipeline {
    agent any 
    environment {
        gitURL = &quot;https://github.com/kennedd-github/agt-launch-jenkins-configuration.git&quot;
    }
    
    stages {
        stage(&apos;Prepare Environment&apos;) {
            steps {
                echo &apos;Prepare Environment&apos;
                script {
                    def now = new Date()
                    TIMESTAMP = now.format(&quot;yyyyMMdd_HHmmss&quot;, TimeZone.getTimeZone(&apos;GMT&apos;))
                    BACKUP_HOME = (env.JENKINS_HOME + &apos;\\..\\Jenkins_Backup&apos;)
                    echo TIMESTAMP
                    echo BACKUP_HOME
                }
                bat label: &apos;&apos;, script: (&apos;for /f &apos; + &apos;%%f &apos; + &apos; in (\&apos;dir /b \&quot;&apos; + BACKUP_HOME + &apos;\&quot;&apos; + &apos;\&apos;&apos; + &apos;) do del /S /Q \&quot;&apos; + BACKUP_HOME + &apos;\\%%f\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;for /f &apos; + &apos;%%f &apos; + &apos; in (\&apos;dir /b \&quot;&apos; + BACKUP_HOME + &apos;\&quot;&apos; + &apos;\&apos;&apos; + &apos;) do rmdir /S /Q \&quot;&apos; + BACKUP_HOME + &apos;\\%%f\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;mkdir &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\&quot;&apos;)
            }
        }
        stage(&apos;Clone Config From GIT&apos;) {
            steps {
                bat label: &apos;&apos;, script: (&apos;cd &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;echo cd &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\&quot;&apos; + &apos;&gt; &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\&apos; + &apos;git.bat&apos; + &apos;\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;echo git.exe init &apos; + &apos;&gt;&gt; &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\&apos; + &apos;git.bat&apos; + &apos;\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;echo git.exe clone &apos; + env.gitURL + &apos;&gt;&gt; &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\&apos; + &apos;git.bat&apos; + &apos;\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;@&apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\&apos; + &apos;git.bat&apos; + &apos;\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;for /f &apos; + &apos;%%f &apos; + &apos; in (\&apos;dir /b \&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\agt-launch-jenkins-configuration\\Jenkins&quot;&apos; + &apos;\&apos;&apos; + &apos;) do del /S /Q \&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\agt-launch-jenkins-configuration\\Jenkins\\%%f\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;for /f &apos; + &apos;%%f &apos; + &apos; in (\&apos;dir /b \&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\agt-launch-jenkins-configuration\\Jenkins&quot;&apos; + &apos;\&apos;&apos; + &apos;) do rmdir /S /Q \&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\agt-launch-jenkins-configuration\\Jenkins\\%%f\&quot;&apos;)

            }
        }

        stage(&apos;Overwrite Clone with Current Config&apos;) {
            steps {
                bat label: &apos;&apos;, script: (&apos;cd &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;echo cd &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\&quot;&apos; + &apos;&gt; &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\&apos; + &apos;git.bat&apos; + &apos;\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;echo xcopy /s \&quot;&apos; + env.JENKINS_HOME + &apos;\&quot;&apos; + &apos; \&quot;agt-launch-jenkins-configuration\\Jenkins\&quot; /E /Y /B &apos; + &apos; &gt;&gt; &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\&apos; + &apos;git.bat&apos; + &apos;\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;@&apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\&apos; + &apos;git.bat&apos; + &apos;\&quot;&apos;)
            }
        }
        
         stage(&apos;Push New Config to GIT&apos;) {
            steps {     
                bat label: &apos;&apos;, script: (&apos;cd &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\&quot;&apos;)                
                bat label: &apos;&apos;, script: (&apos;echo cd &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\agt-launch-jenkins-configuration\&quot;&apos; + &apos; &gt; &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\&apos; + &apos;git.bat&apos; + &apos;\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;echo git.exe add . &apos; + &apos;&gt;&gt; &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\&apos; + &apos;git.bat&apos; + &apos;\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;echo git.exe status &apos; + &apos;&gt;&gt; &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\&apos; + &apos;git.bat&apos; + &apos;\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;echo git.exe commit -m \&quot;Jenkins Configuration Backup &apos; + TIMESTAMP + &apos;\&quot;&apos; + &apos; &gt;&gt; &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\&apos; + &apos;git.bat&apos; + &apos;\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;echo git.exe status &apos; + &apos;&gt;&gt; &apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\&apos; + &apos;git.bat&apos; + &apos;\&quot;&apos;)
                bat label: &apos;&apos;, script: (&apos;@&apos; + &apos;\&quot;&apos; + BACKUP_HOME + &apos;\\&apos; + TIMESTAMP + &apos;\\&apos; + &apos;git.bat&apos; + &apos;\&quot;&apos;)
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>